/*
 * DiscoveryActivity.java
 * classes : com.qdoc.client.ui.DiscoveryActivity
 * @author xiangyutian
 * V 1.0.0
 * Create at 2014-7-11 下午11:26:50
 */
package com.qdoc.client.ui;

import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;

import com.qdoc.client.R;
import com.qdoc.client.ui.fragment.BaseFragment;
import com.qdoc.client.ui.fragment.DiscoveryListFragment;

/**
 * com.qdoc.client.ui.DiscoveryActivity
 * 
 * @author xiangyutian <br/>
 *         create at 2014-7-11 下午11:26:50
 */
public class DiscoveryActivity extends BaseActivity {
    /**
     * TAG
     */
    private static final String TAG = DiscoveryActivity.class.getSimpleName();
    /**
     * view
     */
    private BaseFragment mCurFragment;
    private BaseFragment mDiscoveryListFragment;
    private BaseFragment mInsuranceDetailzFragment;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_discovery);

        initView();
        initListener();
    }

    @Override
    protected void initView() {
        // TODO Auto-generated method stub
        mDiscoveryListFragment = new DiscoveryListFragment();
        mCurFragment = mDiscoveryListFragment;
        FragmentManager fm = getSupportFragmentManager();
        FragmentTransaction ft = fm.beginTransaction();
        ft.add(R.id.fragment_discovery_list, mDiscoveryListFragment, DiscoveryListFragment.TAG);
        ft.show(mDiscoveryListFragment);
        ft.commitAllowingStateLoss();
    }

    @Override
    protected void initListener() {
        // TODO Auto-generated method stub
    }

    public void switchContent(BaseFragment from, BaseFragment to) {
        if (mCurFragment != to) {
            mCurFragment = to;
            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
            if (!to.isAdded()) { // 先判断是否被add过
                transaction.hide(from).add(R.id.fragment_msg_list, to, to.getReqestTag()).commitAllowingStateLoss(); // 隐藏当前的fragment，add下一个到Activity中
            } else {
                transaction.hide(from).show(to).commitAllowingStateLoss(); // 隐藏当前的fragment，显示下一个
            }
        }
    }

    public void switchToDiscoveryList() {
        switchContent(mCurFragment, mDiscoveryListFragment);
    }


    public void onDestroy() {
        super.onDestroy();
    }

}
