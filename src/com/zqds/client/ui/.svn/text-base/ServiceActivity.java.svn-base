package com.qdoc.client.ui;


import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;

import com.qdoc.client.R;
import com.qdoc.client.model.DoctorModel;
import com.qdoc.client.ui.fragment.AboutmeFragment;
import com.qdoc.client.ui.fragment.BaseFragment;
import com.qdoc.client.ui.fragment.CommonQuestionFragment;
import com.qdoc.client.ui.fragment.LoginFragment;
import com.qdoc.client.ui.fragment.ServiceFragment;
import com.qdoc.client.ui.fragment.SetPasswordFragment;
import com.qdoc.client.util.IntentTools;

/**
 * FileName    : ServiceActivity.java
 * Description : 客户服务类
 * @Copyright  : Keai Software Co.,Ltd.Rights Reserved 
 * @Company    : 可爱医生网络技术有限公司
 * @author     : 向春发
 * @version    : 1.0 
 * Create Date : 2015-3-23 
 **/
public class ServiceActivity extends BaseActivity{
	
	 /**
     * TAG
     */
    private static final String TAG = ServiceActivity.class.getSimpleName();

    /**
     * view
     */
    private ServiceFragment mServiceFragment;
    private CommonQuestionFragment mCommonQuestionFragment;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_base);
		initView();
		initListener();
	}

	@Override
	protected void initView() {
		// TODO Auto-generated method stub
		parseIntent();
	    FragmentManager fm = getSupportFragmentManager();
        FragmentTransaction ft = fm.beginTransaction();
        ft.add(R.id.fragment_base, mServiceFragment, ServiceFragment.TAG);
        ft.commitAllowingStateLoss();
	}

	@Override
	protected void initListener() {
		// TODO Auto-generated method stub

	}

	private void parseIntent() {
	    Bundle cacheBundle = getIntent().getExtras();
	    mServiceFragment = ServiceFragment.newInstance(cacheBundle);
	}
	
	@Override
	protected void onPause() {
		super.onPause();
		//从客服信息内容页返回，客服信息未读条数清零
		AboutmeFragment.unReadServerMsgCount = 0;
	}
	
	@Override
	protected void onDestroy() {
		super.onDestroy();
	}
	
    public static void startActivity(Context context, DoctorModel doctorDto) {
        if (context == null) {
            return;
        }
        context.startActivity(IntentTools.startServiceActivity(context, doctorDto));
    }
    
    public static void startActivity(Context context) {
        if (context == null) {
            return;
        }
        context.startActivity(new Intent(context, ServiceActivity.class));
    }
    
    public void switchToCommonQuestionFragment(String tag) {
    	mCommonQuestionFragment = CommonQuestionFragment.newInstance(null);
    	addContent(R.id.fragment_base, mCommonQuestionFragment, tag, true);
    }
   
    /**
     * 添加常见问题到小可列表
     */
    public void addCommonQuestion(String question, String answer) {
    	mServiceFragment.addCommonQuestion(question, answer);
    }
}
