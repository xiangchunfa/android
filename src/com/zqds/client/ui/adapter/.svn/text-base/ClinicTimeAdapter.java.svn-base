/*
 * MessageListAdapter.java
 * classes : com.qdoc.client.ui.adapter.MessageListAdapter
 * @author xiangyutian
 * V 1.0.0
 * Create at 2014-7-20 下午5:57:58
 */
package com.qdoc.client.ui.adapter;

import java.util.ArrayList;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.qdoc.client.R;
import com.qdoc.client.model.ClinicTimeDtoModel;
import com.qdoc.client.model.DoctorModel;
import com.qdoc.client.ui.ClinicTimeSetActivity;
import com.qdoc.client.util.StringUtils;

/**
 * FileName    : ClinicTimeAdapter.java
 * Description : 门诊时间适配器类
 * @Copyright  : Keai Software Co.,Ltd.Rights Reserved 
 * @Company    : 可爱医生网络技术有限公司
 * @author     : 向春发
 * @version    : 1.0 
 * Create Date : 2015-5-11 
 **/
public class ClinicTimeAdapter extends BaseAdapter {
	public static final String OPEN = "1";
	public static final String CLOSE = "0";
    
    /**
     * params
     */
    ArrayList<ClinicTimeDtoModel> msgList = new ArrayList<ClinicTimeDtoModel>();
    private LayoutInflater inflater;
    private Context mContext;
    
    public ClinicTimeAdapter(Context context, ArrayList<ClinicTimeDtoModel> list) {
        mContext = context;
        inflater = LayoutInflater.from(context);
        if(list != null){
        	 msgList = list;
        }
    }

    public void addListData(ArrayList<ClinicTimeDtoModel> list) {
        msgList.clear();
    	if(list != null && list.size() > 0)
           msgList.addAll(list);
        notifyDataSetChanged();
    }

    @Override
    public int getCount() {
        return msgList.size();
    }

    @Override
    public Object getItem(int position) {
        return msgList.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

    	convertView = inflater.inflate(R.layout.listitem_clinic_time, null);
    	LinearLayout lly_row0 = (LinearLayout) convertView.findViewById(R.id.lly_row0);
        LinearLayout lly_row1 = (LinearLayout) convertView.findViewById(R.id.lly_row1);
        LinearLayout lly_row2 = (LinearLayout) convertView.findViewById(R.id.lly_row2);
        //TextView tv_clinic_time_edit = (TextView) convertView.findViewById(R.id.tv_clinic_time_edit);
        TextView tv_clinic_time_name = (TextView) convertView.findViewById(R.id.tv_clinic_time_name);

        ClinicTimeDtoModel model = msgList.get(position);
        String[] week = mContext.getResources().getStringArray(R.array.week);
        tv_clinic_time_name.setText(model.getOutpatientAddress());
        for (int i = 0; i < week.length; i++) {
        	TextView tv_text = (TextView) lly_row0.getChildAt(i);
        	//TextView tv_text = (TextView)((RelativeLayout)lly_row0.getChildAt(i * 2)).findViewById(R.id.tv_text);
        	//ImageView iv_selected = (ImageView)((RelativeLayout)lly_row0.getChildAt(i * 2)).findViewById(R.id.iv_selected);
        	tv_text.setText(week[i]);
        	//tv_text.setTextColor(mContext.getResources().getColor(R.color.c_3d3d3d));
        	//iv_selected.setVisibility(View.GONE);
        }
        if (!StringUtils.isEmpty(model.getAm())) {
        	 for (int i = 0; i < model.getAm().length(); i++) {
             	TextView tv_text = (TextView)((RelativeLayout)lly_row1.getChildAt(i * 2)).findViewById(R.id.tv_text);
             	ImageView iv_selected = (ImageView)((RelativeLayout)lly_row1.getChildAt(i * 2)).findViewById(R.id.iv_selected);
             	tv_text.setText(mContext.getString(R.string.str_am));
             	char ch = model.getAm().charAt(i);
             	int flag = Integer.valueOf(String.valueOf(ch));
             	if (flag == 1){
             		tv_text.setTextColor(mContext.getResources().getColor(R.color.c_3d3d3d));
             		iv_selected.setVisibility(View.VISIBLE);
             	} else {
             		tv_text.setTextColor(mContext.getResources().getColor(R.color.c_dadada));
             		iv_selected.setVisibility(View.GONE);
             	}
             }
        }
        if (!StringUtils.isEmpty(model.getPm())) {
            for (int i = 0; i < model.getPm().length(); i++) {
            	TextView tv_text = (TextView)((RelativeLayout)lly_row2.getChildAt(i * 2)).findViewById(R.id.tv_text);
            	ImageView iv_selected = (ImageView)((RelativeLayout)lly_row2.getChildAt(i * 2)).findViewById(R.id.iv_selected);
            	tv_text.setText(mContext.getString(R.string.str_pm));
            	char ch = model.getPm().charAt(i);
            	int flag = Integer.valueOf(String.valueOf(ch));
            	if (flag == 1){
            		tv_text.setTextColor(mContext.getResources().getColor(R.color.c_3d3d3d));
            		iv_selected.setVisibility(View.VISIBLE);
            	} else {
            		tv_text.setTextColor(mContext.getResources().getColor(R.color.c_dadada));
            		iv_selected.setVisibility(View.GONE);
            	}
            }
        }
        return convertView;
    }
}
