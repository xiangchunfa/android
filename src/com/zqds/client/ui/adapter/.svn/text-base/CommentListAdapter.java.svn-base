/*
 * ConsultAdapter.java
 * classes : com.qdoc.client.ui.adapter.ConsultAdapter
 * @author xiangyutian
 * V 1.0.0
 * Create at 2014-7-16 上午1:56:20
 */
package com.qdoc.client.ui.adapter;

import java.util.ArrayList;
import java.util.List;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import com.qdoc.client.R;
import com.qdoc.client.model.CommentModel;
import com.qdoc.client.util.ListUtils;

/**
 * FileName    : CommentListAdapter.java
 * Description : 评论列表适配器类
 * @Copyright  : Keai Software Co.,Ltd.Rights Reserved 
 * @Company    : 可爱医生网络技术有限公司
 * @author     : 向春发
 * @version    : 1.0 
 * Create Date : 2015-6-9 
 **/
public class CommentListAdapter extends BaseAdapter {
    /**
     * TAG
     */
    private static final String TAG = CommentListAdapter.class.getSimpleName();

    /**
     * view
     */
    private static final int TYPE_MAX_COUNT = 2;
    
    /**
     * params
     */
    private final LayoutInflater mInflater;
    private List<CommentModel> mElements;
    private Context mContext;
	
    public CommentListAdapter(Context context) {
        mContext = context;
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        mElements = new ArrayList<CommentModel>();
    }

    public void addListData(List<CommentModel> elementsList) {
        mElements.clear();
        mElements.addAll(elementsList);
        notifyDataSetChanged();
    }

    public void addMoreListData(ArrayList<CommentModel> elementsList) {
        mElements.addAll(elementsList);
        notifyDataSetChanged();
    }
    
    public void clearListData() {
        mElements.clear();
        mElements = null;
    }

    @Override
    public int getCount() {
        // TODO Auto-generated method stub
        return ListUtils.isEmpty(mElements) ? 0 : mElements.size();
    }

    @Override
    public Object getItem(int position) {
        // TODO Auto-generated method stub
        if (!ListUtils.isEmpty(mElements)) {
            int size = mElements.size();
            return mElements.get(position % size);
        } else {
            return null;
        }
    }

    @Override
    public long getItemId(int position) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public int getViewTypeCount() {
        return TYPE_MAX_COUNT;
    }

    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        final CommentModel model=mElements.get(position);
        com.qdoc.client.util.LogUtils.i(TAG, "getView");
        ViewHolder holder = null;
        if (convertView == null) {
                holder = new ViewHolder();
            	convertView = mInflater.inflate(R.layout.listitem_comment, null);
                holder.tv_question = (TextView) convertView.findViewById(R.id.tv_question);
                holder.rg_answer = (RadioGroup) convertView.findViewById(R.id.rg_answer);
                holder.rb_answer1 = (RadioButton) convertView.findViewById(R.id.rb_answer1);
                holder.rb_answer2 = (RadioButton) convertView.findViewById(R.id.rb_answer2);
                holder.rb_answer3 = (RadioButton) convertView.findViewById(R.id.rb_answer3);
                convertView.setTag(holder);
        }else{
            holder = (ViewHolder) convertView.getTag();
        }
		if (model != null) {
			holder.tv_question.setText((position + 1 + ". ") + model.getQuestion());
			if (model.getAnswerIndex() != null) {
				if (model.getAnswerIndex() == 1) {
					holder.rb_answer1.setChecked(true);
				} else if (model.getAnswerIndex() == 2) {
					holder.rb_answer2.setChecked(true);
				} else if (model.getAnswerIndex() == 3) {
					holder.rb_answer3.setChecked(true);
				}
			}
			if (model.getAnswerList() != null) {
				for (int i = 0; i <model.getAnswerList().size(); i++) {
					String answer = model.getAnswerList().get(i);
	                if (i == 0) { 
	                	holder.rb_answer1.setHint(answer);
	                } else if (i == 1) {
	                	holder.rb_answer2.setHint(answer);
	                } else if (i == 2) {
	                	holder.rb_answer3.setHint(answer);
	                }
				}
			}
		}
        return convertView;
    }

    public interface DetailItemOnclickListener {
        public void onButtonClick(int type, Object obj, View view1, View view2);
    }

    private static class ViewHolder {
        private TextView tv_question;
        private RadioGroup rg_answer;
        private RadioButton rb_answer1;
        private RadioButton rb_answer2;
        private RadioButton rb_answer3;
    }
}