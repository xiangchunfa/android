package com.qdoc.client.ui.adapter;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.qdoc.client.R;
import com.qdoc.client.model.UserFocusDoctorCategoryDto;
import com.qdoc.client.model.UserFocusDoctorDto;
import com.qdoc.client.system.ImageLoaderHelper;
import com.qdoc.client.system.ItemOnclickListener;
import com.qdoc.client.util.ListUtils;

/**
 * 分组和粉丝列表List的适配器
 * @author Antony
 *
 */
public class FansGroupListAdapter extends BaseExpandableListAdapter {
	
    private Context context;
    private LayoutInflater inflater;
    private List<UserFocusDoctorCategoryDto> categoryList;
    private ItemOnclickListener mListener;
	
	/**
	 * @param categoryList the categoryList to set
	 */
	public void setCategoryList(List<UserFocusDoctorCategoryDto> categoryList) {
		if(categoryList==null)
			this.categoryList = new ArrayList<UserFocusDoctorCategoryDto>();
		else
			this.categoryList = categoryList;
	}

	public FansGroupListAdapter(Context context,List<UserFocusDoctorCategoryDto> categoryList,ItemOnclickListener mListener) {
		super();
		this.context = context;
		this.inflater = LayoutInflater.from(context);
		setCategoryList(categoryList);
		this.mListener = mListener;
	}
	
	public void changeData(List<UserFocusDoctorCategoryDto> categoryList){
		setCategoryList(categoryList);
		notifyDataSetChanged();
	}

	@Override
	public int getGroupCount() {
		return this.categoryList.size();
	}

	@Override
	public int getChildrenCount(int groupPosition) {
		if(ListUtils.isEmpty(categoryList.get(groupPosition).getUserList()))
			return 0;
		else
			return this.categoryList.get(groupPosition).getUserList().size();
	}

	@Override
	public Object getGroup(int groupPosition) {
		return this.categoryList.get(groupPosition);
	}

	@Override
	public Object getChild(int groupPosition, int childPosition) {
		return this.categoryList.get(groupPosition).getUserList().get(childPosition);
	}

	@Override
	public long getGroupId(int groupPosition) {
		return this.categoryList.get(groupPosition).getId();
	}

	@Override
	public long getChildId(int groupPosition, int childPosition) {
		return this.categoryList.get(groupPosition).getUserList().get(childPosition).getwUserDto().getId();
	}

	@Override
	public boolean hasStableIds() {
		return true;
	}

	@Override
	public View getGroupView(int groupPosition, boolean isExpanded,View convertView, ViewGroup parent) {
		GroupHolder groupHolder = null;
		if(convertView==null){
			groupHolder = new GroupHolder();
			convertView = inflater.inflate(R.layout.fans_list_group_item, null);
			groupHolder.fans_list_group_item_left_icon = (ImageView) convertView.findViewById(R.id.fans_list_group_item_left_icon);
			groupHolder.fans_group_name = (TextView) convertView.findViewById(R.id.fans_group_name);
			groupHolder.group_fans_count = (TextView) convertView.findViewById(R.id.group_fans_count);
			convertView.setTag(groupHolder);
		}else{
			groupHolder = (GroupHolder) convertView.getTag();
		}
		UserFocusDoctorCategoryDto fansGroup = categoryList.get(groupPosition);
		if(isExpanded)
			groupHolder.fans_list_group_item_left_icon.setImageResource(R.drawable.fans_list_group_icon_expand);
		else
			groupHolder.fans_list_group_item_left_icon.setImageResource(R.drawable.fans_list_group_icon);
		groupHolder.fans_group_name.setText(fansGroup.getCategoryName());
		groupHolder.group_fans_count.setText(fansGroup.getFansNubm()+"");
		return convertView;
	}

	@Override
	public View getChildView(final int groupPosition, final int childPosition,boolean isLastChild, View convertView, ViewGroup parent) {
		ChildHolder childHolder = null;
		if(convertView==null){
			childHolder = new ChildHolder();
			convertView = inflater.inflate(R.layout.fans_list_child_item, null);
			childHolder.iv_fans_header_img = (ImageView) convertView.findViewById(R.id.iv_fans_header_img);
			childHolder.tv_fans_name = (TextView) convertView.findViewById(R.id.tv_fans_name);
			childHolder.tv_consult_count = (TextView) convertView.findViewById(R.id.tv_consult_count);
			childHolder.item_divider_line = convertView.findViewById(R.id.item_divider_line);
			childHolder.ll_load_more_fans = (LinearLayout) convertView.findViewById(R.id.ll_load_more_fans);
			convertView.setTag(childHolder);
		}else{
			childHolder = (ChildHolder) convertView.getTag();
		}
		UserFocusDoctorDto fans = categoryList.get(groupPosition).getUserList().get(childPosition);
		ImageLoaderHelper.getInstance(context).displayImage(fans.getwUserDto().getHeadimgurl(), childHolder.iv_fans_header_img,R.drawable.bank_owener_default_header);
		childHolder.tv_fans_name.setText(fans.getwUserDto().getNicknameStr());
		childHolder.tv_consult_count.setText(fans.getConsultNumber()+"");
		if(categoryList.get(groupPosition).getFansNubm()>getChildrenCount(groupPosition)&&childPosition==(getChildrenCount(groupPosition)-1)){
			//最后一项
			childHolder.item_divider_line.setVisibility(View.GONE);
			childHolder.ll_load_more_fans.setVisibility(View.VISIBLE);
			//为加载更多添加点击事件
			childHolder.ll_load_more_fans.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					mListener.onButtonClick(groupPosition, categoryList.get(groupPosition), null, null, childPosition);
				}
			});
		}else{
			//非最后一项
			childHolder.item_divider_line.setVisibility(View.VISIBLE);
			childHolder.ll_load_more_fans.setVisibility(View.GONE);
		}
		return convertView;
	}

	@Override
	public boolean isChildSelectable(int groupPosition, int childPosition) {
		return true;
	}

    class GroupHolder {
        TextView fans_group_name,group_fans_count;
        ImageView fans_list_group_item_left_icon;
    }

    class ChildHolder {
        TextView tv_fans_name;
        TextView tv_consult_count;
        TextView tv_consult_count_title;
        ImageView iv_fans_header_img;
        View item_divider_line;
        LinearLayout ll_load_more_fans;
    }
}
