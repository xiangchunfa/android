/*
 * ImageDetailFragment.java
 * classes : com.qdoc.client.ui.fragment.ImageDetailFragment
 * @author xiangyutian
 * V 1.0.0
 * Create at 2014-7-22 下午9:07:45
 */
package com.qdoc.client.ui.fragment;

import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;
import com.qdoc.client.R;
import com.qdoc.client.system.ImageLoaderHelper;
import com.qdoc.client.ui.ImageDetailActivity;
import com.qdoc.client.ui.view.photoview.PhotoViewAttacher;
import com.qdoc.client.ui.view.photoview.PhotoViewAttacher.OnPhotoTapListener;

/**
 * com.qdoc.client.ui.fragment.ImageDetailFragment
 * 
 * @author xiangyutian <br/>
 *         create at 2014-7-22 下午9:07:45
 */
public class ImageDetailFragment extends Fragment {
    private String mImageUrl;
    private ImageView mImageView;
    private ProgressBar progressBar;
    private PhotoViewAttacher mAttacher;
    private ImageDetailActivity act;
    
    public ImageView getmImageView() {
		return mImageView;
	}

	public void setmImageView(ImageView mImageView) {
		this.mImageView = mImageView;
	}

	public static ImageDetailFragment newInstance(String imageUrl) {
        final ImageDetailFragment f = new ImageDetailFragment();
        final Bundle args = new Bundle();
        args.putString("url", imageUrl);
        f.setArguments(args);
        return f;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mImageUrl = getArguments() != null ? getArguments().getString("url") : null;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        final View v = inflater.inflate(R.layout.fragment_image_detail, container, false);
        return v;
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
    	// TODO Auto-generated method stub
    	super.onViewCreated(view, savedInstanceState);
		initView(view);
		initParams();
		initListener();
    }
    
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        ImageLoaderHelper.getInstance(getActivity()).displayImage(mImageUrl, mImageView, new SimpleImageLoadingListener() {
            @Override
            public void onLoadingStarted(String imageUri, View view) {
                progressBar.setVisibility(View.VISIBLE);
            }

            @Override
            public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
                String message = null;
                switch (failReason.getType()) {
                    case IO_ERROR:
                        message = "下载错误";
                        break;
                    case DECODING_ERROR:
                        message = "图片无法显示";
                        break;
                    case NETWORK_DENIED:
                        message = "网络有问题，无法下载";
                        break;
                    case OUT_OF_MEMORY:
                        message = "图片太大无法显示";
                        break;
                    case UNKNOWN:
                        message = "未知的错误";
                        break;
                }
                if(getActivity()!=null && message!=null)
                   Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
                progressBar.setVisibility(View.GONE);
            }

            @Override
            public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
                progressBar.setVisibility(View.GONE);
                mAttacher.update();
            }
        });
    }
    
    public void initView(View view) {
    	act = (ImageDetailActivity) getActivity();
    	mImageView = (ImageView) view.findViewById(R.id.image);
    	mAttacher = new PhotoViewAttacher(mImageView);
    	mAttacher.setOnLongClickListener(longClick);
        mAttacher.setOnPhotoTapListener(new OnPhotoTapListener() {

            @Override
            public void onPhotoTap(View arg0, float arg1, float arg2) {
                getActivity().finish();
            }
        });
        progressBar = (ProgressBar) view.findViewById(R.id.loading);
    }
    
    public void initParams() {
    	
    }
    
    public void initListener() {
    	
    }
    
    OnLongClickListener longClick = new OnLongClickListener() {
		
		@Override
		public boolean onLongClick(View v) {
			// TODO Auto-generated method stub
			act.getLly_bottom().setVisibility(View.VISIBLE);
			return true;
		}
	};
    
}