/*
 * ConsultListFragment.java
 * classes : com.qdoc.client.ui.fragment.ConsultListFragment
 * @author xiangyutian
 * V 1.0.0
 * Create at 2014-7-16 上午2:00:03
 */
package com.qdoc.client.ui.fragment;

import android.app.ProgressDialog;
import android.content.Context;
import android.graphics.Color;
import android.os.Bundle;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.style.ForegroundColorSpan;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.TextView;

import com.qdoc.client.R;
import com.qdoc.client.config.PersonalConfig;
import com.qdoc.client.config.PersonalConfigKey;
import com.qdoc.client.helper.Global;
import com.qdoc.client.http.HttpTaskManager;
import com.qdoc.client.http.ServerErrorCode;
import com.qdoc.client.http.listener.IResultReceiver;
import com.qdoc.client.http.parser.JsonParserFactory;
import com.qdoc.client.http.url.DataRequestUtils;
import com.qdoc.client.model.GainGiftBagInfoDtoModel;
import com.qdoc.client.model.GainGiftBagShowDataModel;
import com.qdoc.client.model.GainGiftBagStatusDataModel;
import com.qdoc.client.ui.GiftBagActivity;
import com.qdoc.client.ui.LoginActivity;
import com.qdoc.client.ui.widget.TitleBar;
import com.qdoc.client.util.LogUtils;
import com.qdoc.client.util.ToastUtils;

/**
 * com.qdoc.client.ui.fragment.InsuranceDetailzFragment
 * 
 * @author xiangchunfa <br/>
 *         create at 2014-9-29 上午2:00:03
 */
public class GetGiftBagSuccessFragment extends BaseFragment {
    /**
     * TAG
     */
    public static final String TAG = GetGiftBagSuccessFragment.class.getSimpleName();

    /**
     * view
     */
    private TitleBar mTitleBar;
    private TextView tvReceiver;
    private TextView tvTel;
    private TextView tvAddress;
    private TextView tvGetTime;
    private TextView tvSendInstructions;
	private TextView tvGiftDesc;
	
	//花旗参活动TextView
	private TextView send_card_content;
	
    /**
     * PARAMS
     */
	   
	public static GetGiftBagSuccessFragment newInstance(Bundle bundle) {
		final GetGiftBagSuccessFragment fragment = new GetGiftBagSuccessFragment();
		fragment.setArguments(bundle);
        LogUtils.d(TAG, "newInstance");
		return fragment;
	}

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        LogUtils.d(TAG, "onCreateView");
        return inflater.inflate(R.layout.fragment_get_gift_bag_success, container, false);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        LogUtils.d(TAG, "onViewCreated");
        initView(view);
        initListener();
        initParams();
    }

    private void initParams() {
    	startGainGiftBagShowRequest(getActivity());
    }

    private void initView(View view) {
        mTitleBar = (TitleBar) view.findViewById(R.id.titlebar);
        mTitleBar.setTitleInfo(R.string.loveliness_doctor, R.drawable.icon_back, 0, actionBarLeftBtnListener, null,
                getResources().getColor(R.color.titlebar_bg));
        tvReceiver =(TextView) view.findViewById(R.id.tv_receiver);
        tvTel = (TextView) view.findViewById(R.id.tv_tel);
        tvAddress = (TextView) view.findViewById(R.id.tv_address);
        tvGetTime = (TextView) view.findViewById(R.id.tv_get_time);
        tvSendInstructions=(TextView) view.findViewById(R.id.tv_send_instructions);
        tvGiftDesc=(TextView) view.findViewById(R.id.tv_gift_desc);
        send_card_content = (TextView) view.findViewById(R.id.tv_send_card_content);
 	    SpannableString spanText = new SpannableString(send_card_content.getText().toString());
 	    spanText.setSpan(new ForegroundColorSpan(Color.parseColor("#fb3941")), 7, 10,Spannable.SPAN_INCLUSIVE_EXCLUSIVE);
 	    spanText.setSpan(new ForegroundColorSpan(Color.parseColor("#fb3941")), 14,19,Spannable.SPAN_INCLUSIVE_EXCLUSIVE);
 	    send_card_content.setText(spanText);
    }

    protected void initListener() {

    }

    OnClickListener actionBarLeftBtnListener = new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            final GiftBagActivity activity = (GiftBagActivity) getActivity();
            if (activity == null) {
                LogUtils.d(TAG, "msgActivity == null!!!!");
                return;
            }
            activity.finish();
        }
    };
    

    private  void startGainGiftBagShowRequest(final Context context) {
        String token = PersonalConfig.getString(PersonalConfigKey.EXTRA_TOKEN);
        LogUtils.d(TAG, "startGainGiftBagShowRequest");
        Global.progressDialog = ProgressDialog.show(context, null,
        		context.getString(R.string.discovery_giftbag_show), true,
					true);
        HttpTaskManager.startStringRequest(
                DataRequestUtils.getGainGiftBagShowRequestParam(TAG, token),
                JsonParserFactory.parseBaseModel(GainGiftBagShowDataModel.class), new IResultReceiver() {

                    @Override
                    public void onReceiveResult(int resultCode, Object resultData) {
                        // TODO Auto-generated method stub
                    	Global.progressDialog.dismiss();
                        LogUtils.d(TAG, "startGainGiftBagShowRequest=>success");
                        if (resultCode == ServerErrorCode.STATUS_SUCCESS) {
                        	GainGiftBagShowDataModel dataModel = (GainGiftBagShowDataModel) resultData;
                            if (dataModel != null&&dataModel.getState() == ServerErrorCode.INTERFACE_SUCCESS) {
                            	showGiftBag(dataModel.getGainGiftBagInfoDto());
                            }else if(dataModel.getState() == ServerErrorCode.TOKEN_INVALID){
                                LoginActivity.startActivity(getActivity());
          					}
                        } else {
                            if (resultData == null) {
                                ToastUtils.ToastShort(context, R.string.network_error);
                            } else {
                                ToastUtils.ToastShort(context, (String) resultData);
                            }
                        }
                        LogUtils.d(TAG, "resultCode::: " + resultCode + "resultData ::: " + resultData);
                    }
                });
    }
    
   public void showGiftBag(GainGiftBagInfoDtoModel model){
	   tvReceiver.setText(model.getContactPerson());
	   tvTel.setText(model.getPhoneNumber());
	   tvAddress.setText(model.getAddress());
	   tvGetTime.setText(model.getApplyTime());
	   tvSendInstructions.setText(model.getDescription());
	   tvGiftDesc.setText(model.getDescription());
   }

    
    public void onDestroy() {
        LogUtils.d(TAG, "onDestroy");
        super.onDestroy();
        HttpTaskManager.stop(TAG);
    }

    @Override
    public void onDestroyView() {
    	// TODO Auto-generated method stub
        LogUtils.d(TAG, "onDestroyView");
    	super.onDestroyView();
    }
    
	@Override
	public String getReqestTag() {
		// TODO Auto-generated method stub
		return null;
	}

   
}
