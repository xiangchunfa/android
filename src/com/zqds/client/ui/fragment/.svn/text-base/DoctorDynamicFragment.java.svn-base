package com.qdoc.client.ui.fragment;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import com.qdoc.client.R;
import com.qdoc.client.config.PersonalConfig;
import com.qdoc.client.config.PersonalConfigKey;
import com.qdoc.client.http.HttpTaskManager;
import com.qdoc.client.http.ServerErrorCode;
import com.qdoc.client.http.listener.IResultReceiver;
import com.qdoc.client.http.parser.JsonParserFactory;
import com.qdoc.client.http.url.DataRequestUtils;
import com.qdoc.client.model.ArticleListDto;
import com.qdoc.client.model.ConsultShareListDto;
import com.qdoc.client.model.ConsultShareListModel;
import com.qdoc.client.model.InfomationListModel;
import com.qdoc.client.model.Pagination;
import com.qdoc.client.ui.InfomationActivity;
import com.qdoc.client.ui.LoginActivity;
import com.qdoc.client.ui.MainActivity;
import com.qdoc.client.ui.MyArticleActivity;
import com.qdoc.client.ui.view.ConsultShareItem;
import com.qdoc.client.ui.view.MobileClinicArticleItem;
import com.qdoc.client.util.AttachUtil;
import com.qdoc.client.util.ListUtils;

import de.greenrobot.event.EventBus;
/**
 * FileName    : DoctorDynamicFragment.java
 * Description : 医生动态类
 * @Copyright  : Keai Software Co.,Ltd.Rights Reserved 
 * @Company    : 可爱医生网络技术有限公司
 * @author     : Antony
 * @version    : 1.0 
 * Create Date : 2015-8-11 
 **/
public class DoctorDynamicFragment extends BaseFragment implements OnClickListener{
   
	/**
	 * TAG
	 */
	public static final String TAG = DoctorDynamicFragment.class.getSimpleName();
	
	private int GLOBAL_LIMIT = 20;
	
	private List<ArticleListDto> wechatArticleList;
	private int currentArticleListPage;//微信文章的当前页码,从0开始
	private LinearLayout ll_doctor_article_content_layout;
	private LinearLayout ll_article_list_item_layout;
	private TextView tv_more_article;
	private TextView add_my_article;
	
	
	private int currentConsultShareListPage;
	private LinearLayout ll_consult_share_item_layout;
	private LinearLayout ll_more_consult_share;
	private TextView tv_empty_consult_share;
	private TextView add_consult_share;
	
	private ScrollView sv_main;

	
    public static DoctorDynamicFragment newInstance(Bundle bundle) {
	     final DoctorDynamicFragment fragment = new DoctorDynamicFragment();
	     return fragment;
	}
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_doctor_dynamic, container, false);
	}
	
	@Override
	public void onViewCreated(View view, Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);
		initView(view);
		initParams();
		initListener();
	}
	
	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
	}

	@Override
	public String getReqestTag() {
		return TAG;
	}

	public void initView(View v) {
		sv_main = (ScrollView) v.findViewById(R.id.sv_main);
		
		ll_doctor_article_content_layout = (LinearLayout) v.findViewById(R.id.ll_article_content_layout);
		ll_article_list_item_layout = (LinearLayout) v.findViewById(R.id.ll_article_list_item_layout);
		tv_more_article = (TextView) v.findViewById(R.id.tv_more_article);
		add_my_article = (TextView) v.findViewById(R.id.tv_add_article);
		
		ll_consult_share_item_layout = (LinearLayout) v.findViewById(R.id.ll_consult_share_item_layout);
		ll_more_consult_share = (LinearLayout) v.findViewById(R.id.ll_more_consult_share_layout);
		tv_empty_consult_share = (TextView) v.findViewById(R.id.tv_empty_consult_share);
		add_consult_share = (TextView) v.findViewById(R.id.tv_add_consult_share);
		
	}

	public void initParams() {
		wechatArticleList = new ArrayList<ArticleListDto>();
		currentArticleListPage = 0;
		currentConsultShareListPage = 0;
		getWeChatArticleListRequest();
	}

	public void initListener() {
		// attach top，防止下拉时，联动头部一起滑动
        // Scroll view does not have scroll listener
        sv_main.setOnTouchListener(new View.OnTouchListener() {
        	
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                EventBus.getDefault().post(AttachUtil.isScrollViewAttach(sv_main));
                return false;
            }
        });
		tv_more_article.setOnClickListener(this);
		ll_more_consult_share.setOnClickListener(this);
		add_my_article.setOnClickListener(this);
		add_consult_share.setOnClickListener(this);
	}
	
	/**
	 * 获取微信文章
	 */
	private void getWeChatArticleListRequest(){
		currentArticleListPage++;
		String token = PersonalConfig.getString(PersonalConfigKey.EXTRA_TOKEN);
		HttpTaskManager.startStringRequest(DataRequestUtils.getMyWeChatArticleList(TAG, token, currentArticleListPage, GLOBAL_LIMIT), 
				JsonParserFactory.parseBaseModel(InfomationListModel.class), 
				new IResultReceiver() {
			
			@Override
			public void onReceiveResult(int resultCode, Object resultData) {
				if(resultCode == ServerErrorCode.STATUS_SUCCESS){
					InfomationListModel articleListModel = (InfomationListModel) resultData;
					if(articleListModel!=null && articleListModel.getState()==ServerErrorCode.INTERFACE_SUCCESS){
						Pagination<ArticleListDto> pager = articleListModel.getPager();
						ArrayList<ArticleListDto> data = pager.getElements();
						if(ListUtils.isEmpty(data)){
							//没有微信文章,隐藏微信文章布局
							ll_doctor_article_content_layout.setVisibility(View.GONE);
						}else{
							addArticleView(data, pager.isHasNext());
						}
					}else if(articleListModel!=null && articleListModel.getState()==ServerErrorCode.TOKEN_INVALID){
						LoginActivity.startActivity(getActivity());
					}else{
						//数据异常
						ll_doctor_article_content_layout.setVisibility(View.GONE);
						currentArticleListPage--;
					}
				}else{
					//网络异常
					ll_doctor_article_content_layout.setVisibility(View.GONE);
					currentArticleListPage--;
				}
				getConsultShareList();
			}
		});
	}
	
	private void addArticleView(List<ArticleListDto> data,boolean hasNextPage){
		if(currentArticleListPage==1){
			wechatArticleList.clear();//先清空所有记录
			wechatArticleList.addAll(data);//再重新添加新加载的记录
		}else{
			wechatArticleList.addAll(data);
		}
		int count = data.size();
		for(int i=0;i<count;i++){
			MobileClinicArticleItem item = new MobileClinicArticleItem(getContext(), data.get(i));
			ll_article_list_item_layout.addView(item);
		}
		if(hasNextPage){
			//显示更多文本
			tv_more_article.setVisibility(View.VISIBLE);
		}else{
			//隐藏更多文本
			tv_more_article.setVisibility(View.GONE);
		}
	}
	
	private void getConsultShareList(){
		currentConsultShareListPage++;
		String token = PersonalConfig.getString(PersonalConfigKey.EXTRA_TOKEN);
		HttpTaskManager.startStringRequest(DataRequestUtils.getConsultShareList(TAG, token, currentConsultShareListPage, GLOBAL_LIMIT), 
				JsonParserFactory.parseBaseModel(ConsultShareListModel.class), 
				new IResultReceiver() {
			
			@Override
			public void onReceiveResult(int resultCode, Object resultData) {
				if(resultCode == ServerErrorCode.STATUS_SUCCESS){
					ConsultShareListModel consultShareListModel = (ConsultShareListModel) resultData;
					if(consultShareListModel!=null && consultShareListModel.getState()==ServerErrorCode.INTERFACE_SUCCESS){
						Pagination<ConsultShareListDto> pager = consultShareListModel.getPager();
						ArrayList<ConsultShareListDto> data = pager.getElements();
						if(ListUtils.isEmpty(data)){
							//就医分享，隐藏就医分享布局
							tv_empty_consult_share.setVisibility(View.VISIBLE);
							ll_consult_share_item_layout.removeAllViews();
							ll_consult_share_item_layout.setVisibility(View.GONE);
							ll_more_consult_share.setVisibility(View.GONE);
						}else{
							addConsultShareView(data, pager.isHasNext());
						}
					}else if(consultShareListModel!=null && consultShareListModel.getState()==ServerErrorCode.TOKEN_INVALID){
						LoginActivity.startActivity(getActivity());
					}else{
						//数据异常
						tv_empty_consult_share.setVisibility(View.GONE);
						ll_more_consult_share.setVisibility(View.GONE);
						currentConsultShareListPage--;
					}
				}else{
					//网络异常
					tv_empty_consult_share.setVisibility(View.GONE);
					ll_more_consult_share.setVisibility(View.GONE);
					currentConsultShareListPage--;
				}
			}
		});
	}
	
	private void addConsultShareView(List<ConsultShareListDto> data,boolean hasNextPage){
		tv_empty_consult_share.setVisibility(View.GONE);
		ll_consult_share_item_layout.setVisibility(View.VISIBLE);
		int count = data.size();
		for(int i=0;i<count;i++){
			ConsultShareItem item = new ConsultShareItem(getContext(), data.get(i));
			ll_consult_share_item_layout.addView(item);
		}
		if(hasNextPage){
			//显示更多文本
			ll_more_consult_share.setVisibility(View.VISIBLE);
		}else{
			//隐藏更多文本
			ll_more_consult_share.setVisibility(View.GONE);
		}
	}
	
    
	@Override
	public void onDestroy() {
		super.onDestroy();
		HttpTaskManager.stop(TAG);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.tv_more_article:
			getWeChatArticleListRequest();
			break;
		case R.id.ll_more_consult_share_layout:
			getConsultShareList();
			break;
		case R.id.tv_add_article:
			startActivity(new Intent(getContext(), MyArticleActivity.class));
			break;
		case R.id.tv_add_consult_share:
			MainActivity.startActivity(getContext(), MainActivity.TAB_INDEX_TAB1_ACTIVITY, MainActivity.TAB_INDEX_HISTORY_CONSULT);
			getActivity().finish();
			break;
		default:
			break;
		}
	}
}
