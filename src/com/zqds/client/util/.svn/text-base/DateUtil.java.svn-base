package com.qdoc.client.util;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashSet;
import java.util.Set;

import android.annotation.SuppressLint;
/**
 * FileName    : DateUtil.java
 * Description : 时间工具类
 * @Copyright  : Keai Software Co.,Ltd.Rights Reserved 
 * @Company    : 可爱医生网络技术有限公司
 * @author     : 向春发
 * @version    : 1.0 
 * Create Date : 2015-7-1 
 **/
@SuppressLint("ParserError")
public class DateUtil {
	public final static String timeFormat1 = "yyyy-MM-dd HH:mm:ss";
	public final static String timeFormat2 = "yyyy-MM-dd HH:mm";
	public final static String timeFormat3 = "MM-dd HH:mm";
	public final static String timeFormat4 = "yyyy";
	public final static String timeFormat5 = "HH:mm:ss";
	
	/** 
     * 将当前时间 转换成 yyyy-MM-dd HH:mm:ss形式输出 
     * @return 
     */  
	@SuppressLint("SimpleDateFormat")
	public static String formatDate() {
		String dateStr = "";
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date date = new Date();
		dateStr = df.format(date);
		return dateStr;
	}
   
	/**
	* 日期转换成字符串
	* @param date 
	* @return str
	*/
	@SuppressLint("SimpleDateFormat")
	public static String DateToStr(Date date, String pattern) {
		String str = null;
		try {
			SimpleDateFormat format = new SimpleDateFormat(pattern);
			str = format.format(date);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return str;
	}

	/**
	* 时间字符串转换成指定格式的时间字符串
	* 
	* @param str 时间字符串
	* @param pattern 时间格式
	* @return str
	*/
	public static String strToStr(String time, String pattern) {
		return DateToStr(StrToDate(time, pattern), pattern);
	}
 
	
	/**
	* 字符串转换成日期
	* @param str
	* @return date
	*/
	@SuppressLint("SimpleDateFormat")
	public static Date StrToDate(String str) {
	  
	   SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
	   Date date = null;
	   try {
	    date = format.parse(str);
	   } catch (ParseException e) {
	    e.printStackTrace();
	   }
	   return date;
	}
	
	/**
	* 字符串转换成指定格式的日期
	* @param str
	* @return pattern:日期格式
	*/
	@SuppressLint("SimpleDateFormat")
	public static Date StrToDate(String str, String pattern) {
	   if (str == null || pattern == null) {
		   return null;
	   }
	   SimpleDateFormat format = new SimpleDateFormat(pattern);
	   Date date = null;
	   try {
	    date = format.parse(str);
	   } catch (ParseException e) {
	    e.printStackTrace();
	   }
	   return date;
	}
	
	/** 
     * 将yyyy-MM-dd HH:mm:ss 转换成 yyyy-MM-dd形式输出 
     * @return 
     */  
	@SuppressLint("SimpleDateFormat")
	public static String strTostr1(String time) {  
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");  
        String date = null;  
        try {  
            date = sdf2.format(sdf2.parse(time));  
        } catch (ParseException e) {  
            // TODO Auto-generated catch block  
            e.printStackTrace();  
        }  
        return date;  
    }  
    
    /** 
     * 根据用户传入的时间，返回指定格式的时间 
     * @param time 格式为yyyy-MM-dd HH:mm:ss
     * @param sformat 转换后的格式
     *            
     * @return 
     */  
    @SuppressLint("SimpleDateFormat")
	public static String getDate(String time,String sformat) { 
 	   String dateString = "";
 	try {
 		   SimpleDateFormat formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
 		   Date currentTime = formatter.parse(time);  
 		   SimpleDateFormat formatterdd = new SimpleDateFormat(sformat);  
 		   dateString = formatterdd.format(currentTime);
 	} catch (ParseException e) {
 		// TODO Auto-generated catch block
 		e.printStackTrace();
 	}  
        return dateString;  
    }
    
    public static long addTime(int field, int value) {
		Calendar cal = Calendar.getInstance();
		cal.add(field, value);
		return cal.getTimeInMillis();
	}
	
	public static long addTime(Date baseTime, int field, int value) {
		return addTime(baseTime.getTime(), field, value);
	}

	public static long addTime(long baseTime, int field, int value) {
		Calendar cal = Calendar.getInstance();
		cal.setTimeInMillis(baseTime);
		cal.add(field, value);
		return cal.getTimeInMillis();
	}
	
	public static long dateDiff(long startDate, long endDate) {
		return endDate - startDate;
	}
//
//	public static long dateDiff(java.util.Date startDate, java.util.Date endDate) {
//		long d1 = (startDate == null) ? 0 : startDate.getTime();
//		long d2 = (endDate == null) ? 0 : endDate.getTime();
//		return dateDiff(d1, d2);
//	}

	public static long dateDiff(String startDate, String endDate) {
		long d1 = getTimeMS(startDate), d2 = getTimeMS(endDate);
		return dateDiff(d1, d2);
	}
	
	/**
	 * 根据日期格式(yyyy-MM-dd)得到年、月、日
	 * @param 字段值：年、月、日
	 */
	@SuppressLint({ "ParserError", "ParserError" })
	public static int parseDate(String date,int field){
	  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	  Calendar calendar = GregorianCalendar.getInstance();
	  try {
	  calendar.setTime(sdf.parse(date));
	  } catch (ParseException e) {
	      System.out.println(e);
	  }     
	  int size=calendar.get(field);
	  if(field==Calendar.MONTH){
		  size+=1;
	  }
	  return size;
	} 

	/**
	 * 日期运算类
	 * 如果为-1表示是减
	 * 
	 * @param field
	 * @param value
	 * @param date
	 */
	@SuppressLint("SimpleDateFormat")
	public static String addDate(String date, int field, int value) {
		GregorianCalendar gc = new GregorianCalendar();
		SimpleDateFormat sf = new SimpleDateFormat(timeFormat1);
		Date tempDate = null;
		try {
			tempDate = sf.parse(date);
		} catch (ParseException e) {
			// TODO 自动生成 catch 块
			e.printStackTrace();
		}
		gc.setTime(tempDate);
		gc.add(field, value);
		return sf.format(gc.getTime());
	}

	
	/**
	 * 根据开始时间与结束时间获取月份列表
	 * 
	 * @param startTime
	 *            开始时间
	 * @param endTime
	 *            结束时间
	 * @return 月份列表
	 */
	public static Set<String> getMonths(String startTime, String endTime) {
		String time = null;
		String mTempTime = DateUtil.getDate(startTime, "yyyy-MM");
		Set<String> months = new HashSet<String>();
		String mEndTime = DateUtil.getDate(endTime, "yyyy-MM");
		while (!mEndTime.equals(mTempTime)) {
			months.add(mTempTime);
			time = addDate(startTime, 2, 1);
			mTempTime = DateUtil.getDate(time, "yyyy-MM");
			startTime = time;
		}
		months.add(mEndTime);
		return months;
	}

	/**
	 * 获取指定格式的时间
	 * 
	 * @param format
	 *            时间格式
	 */
	@SuppressLint("SimpleDateFormat")
	public static String getDate(String format) {
		Calendar c = Calendar.getInstance();
		SimpleDateFormat f = new SimpleDateFormat(format);
		return f.format(c.getTime());
	}
	
	/**
	 * 获取指定格式的时间
	 * 
	 * @param format 时间格式
	 */
	@SuppressLint("SimpleDateFormat")
	public static String getDate(long time, String format) {
		SimpleDateFormat f = new SimpleDateFormat(format);
		return f.format(time);
	}
	
	/**
	 * 获取指定时间的毫秒数
	 * 
	 * @param format 时间格式
	 */
	@SuppressLint("SimpleDateFormat")
	public static long getTimeMS(String time) {
		GregorianCalendar gc = new GregorianCalendar();
		SimpleDateFormat sf = new SimpleDateFormat(timeFormat1);
		Date tempDate = null;
		try {
			tempDate = sf.parse(time);
		} catch (ParseException e) {
			// TODO 自动生成 catch 块
			e.printStackTrace();
		}
		gc.setTime(tempDate);
		return gc.getTimeInMillis();
	}
	
	/** 
	 * 毫秒转化成时分形式
	 */  
	public static String formatTime(long ms) {
		int ss = 1000;
		int mi = ss * 60;
		int hh = mi * 60;
		long hour = ms / hh;
		long minute = (ms - hour * hh) / mi;
		long second = (ms - minute * mi - hour * hh) / 1000;
		return hour + ":" + minute + ":" + second;
	}
}
